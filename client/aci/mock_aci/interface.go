// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/virtual-kubelet/azure-aci/client/aci (interfaces: Interface)

// Package mock_aci is a generated GoMock package.
package mock_aci

import (
	context "context"
	containerinstance "github.com/Azure/azure-sdk-for-go/services/containerinstance/mgmt/2019-12-01/containerinstance"
	insights "github.com/Azure/azure-sdk-for-go/services/preview/monitor/mgmt/2019-06-01/insights"
	gomock "github.com/golang/mock/gomock"
	aci "github.com/virtual-kubelet/azure-aci/client/aci"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// CreateContainerGroup mocks base method
func (m *MockInterface) CreateContainerGroup(arg0 context.Context, arg1, arg2 string, arg3 containerinstance.ContainerGroup) (containerinstance.ContainerGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateContainerGroup", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(containerinstance.ContainerGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateContainerGroup indicates an expected call of CreateContainerGroup
func (mr *MockInterfaceMockRecorder) CreateContainerGroup(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateContainerGroup", reflect.TypeOf((*MockInterface)(nil).CreateContainerGroup), arg0, arg1, arg2, arg3)
}

// DeleteContainerGroup mocks base method
func (m *MockInterface) DeleteContainerGroup(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteContainerGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteContainerGroup indicates an expected call of DeleteContainerGroup
func (mr *MockInterfaceMockRecorder) DeleteContainerGroup(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteContainerGroup", reflect.TypeOf((*MockInterface)(nil).DeleteContainerGroup), arg0, arg1, arg2)
}

// GetContainerGroup mocks base method
func (m *MockInterface) GetContainerGroup(arg0 context.Context, arg1, arg2 string) (containerinstance.ContainerGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerGroup", arg0, arg1, arg2)
	ret0, _ := ret[0].(containerinstance.ContainerGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerGroup indicates an expected call of GetContainerGroup
func (mr *MockInterfaceMockRecorder) GetContainerGroup(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerGroup", reflect.TypeOf((*MockInterface)(nil).GetContainerGroup), arg0, arg1, arg2)
}

// GetContainerGroupMetrics mocks base method
func (m *MockInterface) GetContainerGroupMetrics(arg0 context.Context, arg1, arg2 string, arg3 aci.MetricsRequest) (insights.Response, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerGroupMetrics", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(insights.Response)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerGroupMetrics indicates an expected call of GetContainerGroupMetrics
func (mr *MockInterfaceMockRecorder) GetContainerGroupMetrics(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerGroupMetrics", reflect.TypeOf((*MockInterface)(nil).GetContainerGroupMetrics), arg0, arg1, arg2, arg3)
}

// GetContainerLogs mocks base method
func (m *MockInterface) GetContainerLogs(arg0 context.Context, arg1, arg2, arg3 string, arg4 int) (*containerinstance.Logs, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetContainerLogs", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(*containerinstance.Logs)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetContainerLogs indicates an expected call of GetContainerLogs
func (mr *MockInterfaceMockRecorder) GetContainerLogs(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetContainerLogs", reflect.TypeOf((*MockInterface)(nil).GetContainerLogs), arg0, arg1, arg2, arg3, arg4)
}

// GetResourceProviderMetadata mocks base method
func (m *MockInterface) GetResourceProviderMetadata(arg0 context.Context) (*aci.ResourceProviderMetadata, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetResourceProviderMetadata", arg0)
	ret0, _ := ret[0].(*aci.ResourceProviderMetadata)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetResourceProviderMetadata indicates an expected call of GetResourceProviderMetadata
func (mr *MockInterfaceMockRecorder) GetResourceProviderMetadata(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetResourceProviderMetadata", reflect.TypeOf((*MockInterface)(nil).GetResourceProviderMetadata), arg0)
}

// LaunchExec mocks base method
func (m *MockInterface) LaunchExec(arg0 context.Context, arg1, arg2, arg3, arg4 string, arg5 aci.TerminalSizeRequest) (containerinstance.ContainerExecResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "LaunchExec", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(containerinstance.ContainerExecResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// LaunchExec indicates an expected call of LaunchExec
func (mr *MockInterfaceMockRecorder) LaunchExec(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "LaunchExec", reflect.TypeOf((*MockInterface)(nil).LaunchExec), arg0, arg1, arg2, arg3, arg4, arg5)
}

// ListContainerGroups mocks base method
func (m *MockInterface) ListContainerGroups(arg0 context.Context, arg1 string) (containerinstance.ContainerGroupListResult, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListContainerGroups", arg0, arg1)
	ret0, _ := ret[0].(containerinstance.ContainerGroupListResult)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListContainerGroups indicates an expected call of ListContainerGroups
func (mr *MockInterfaceMockRecorder) ListContainerGroups(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListContainerGroups", reflect.TypeOf((*MockInterface)(nil).ListContainerGroups), arg0, arg1)
}

// UpdateContainerGroup mocks base method
func (m *MockInterface) UpdateContainerGroup(arg0 context.Context, arg1, arg2 string, arg3 containerinstance.ContainerGroup) (containerinstance.ContainerGroup, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateContainerGroup", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(containerinstance.ContainerGroup)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateContainerGroup indicates an expected call of UpdateContainerGroup
func (mr *MockInterfaceMockRecorder) UpdateContainerGroup(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateContainerGroup", reflect.TypeOf((*MockInterface)(nil).UpdateContainerGroup), arg0, arg1, arg2, arg3)
}
